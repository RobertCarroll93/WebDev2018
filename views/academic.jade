extends layout

block content
        //
          https://www.w3schools.com/howto/howto_css_team.asp
          Basic html of the academic secion basesd on code from the above link
          .w3-content.w3-section(style='max-width:500px')
     
        .w3-content.w3-section(style='max-width:500px')
        img.bannerslides(src='banner2.jpg')
        img.bannerslides(src='banner3.jpg')

        .row
          .column
            .card
              .container
                h2 HTML
                p
                  button#btn1 More Information
                  #myModal.modal
                    // content of model
                    .modal-content
                      span.close ×
                      h1 HTML
                      hr
                      p
                        | Hypertext Markup Language is a web standard for creating web pages and applications. Web browsers take HTML and render it into multimedia web pages. HTML creates the structure of a web page and can also be used to style (although this is now more commonly done using Cascading Style Sheets, which will be later elaborated upon).
                      p The pros of using HTML are;
                      ul
                        li Easy to learn
                        li It is free
                        li Is easily interpreted by all browsers
                        li Widely used
                        li
                          | Is very forgiving e.g. A misspelled or misplaced tag often does not affect the structure of the web page
                        li
                          | Has an ever-improving set of features that respond it changing times, such new multimedia/graphic elements
                      | Cons include;
                      ul
                        li
                          | Can take a long time for new standards to be fully implemented by authors and browsers alike
                        li
                          | Can be almost to forgiving in a sense with web pages being poorly written. This can lead to HTML becoming difficult for others to read and for search engines to efficiently catalogue the contents of a web page
                        li Tags are in American English only which may inconvenience non-native speakers
          .column2
            .card
              .container
                h2 CSS
                p
                  button#btn2 More Information
                  #myModal2.modal
                    // content of model
                    .modal-content
                      span.close ×
                      h1 CSS
                      p
                        | Cascading Style Sheets are used to describe the how a web page is to be presented in a document containing a markup language. CSS is used on each webpage of this application.
                      p The pros of using CSS are;
                      ul
                        li Easy to learn
                        li Speed at which a page can be styled over multiple web pages
                        li Compatible on any browser of note
                      p The cons are;
                      ul
                        li
                          | Syntax is different from HTML (for example, the syntax for commenting are different meaning both must be remembered)
                        li Can cause complications when using web development tools such as Dreamweaver
                        li Lack of security
                        li Doesn’t always behave identically in every browser
          .column3
            .card
              .container
                h2 JavaScript
                p
                  button#btn3 More Information
                  #myModal3.modal
                    // content of model
                    .modal-content
                      span.close ×
                      h1 JavaScript
                      p
                        | JS is a high-level programming language, that along with HTML and CSS form the three main technologies that make up the World Wide Web. It is supported by all modern web browsers and is used to create dynamic websites, meaning the page does not need to be refreshed to change an element or content on the page. JavaScript was originally a client-side programming language, but this has changed in recent years. It can now be used as a server-side language which is evident in the use of Node.js in this project. This has made JS a multi-purpose programming language that has bridged the gap between client and server-side programming, which has led to a large uptake in the use of JS in recent times. 
                      p The pros of using JS are;
                      ul
                        li JS is relatively easy to learn in comparison to other prominent programming languages such as Java and C++.
                        li When used as a client-side language, JS is very fast as it does not need to contact the server side for a response.
                        li JS is very versatile and can be placed into most file extensions, while other languages such as PHP cannot.
                      p The cons are;
                      ul
                        li
                          | When JS is used on the client side it can be open to malicious attacks. 
                        li JS can sometimes be interpreted differently by different browsers, although in the current time this is not as much of a problem as it has been in the past.
                        li Although JS is fast becoming a big player in server-side programming, some argue that it is not as powerful as the longer established languages such as Java and C.
                        li When used for server-side purposes, there are differences which can lead to difficulties. This may be due to the fact that JS is not regarded as an objected orientated language by many, although this is open to interpretation (Stack Overflow, 2012).
                      p
                        | As is the case with HTML, there are noth
        .row2
          .column
            .card
              .container
                h2 Jade
                p
                  button#btn4 More Information
                  #myModal4.modal
                    // content of model
                    .modal-content
                      span.close ×
                      h1 Jade
                      p
                        |  Jade is a templating engine used in Node.js. It allows for cleaner, more readable code that can easily be altered or maintain. Jade compiles into basic HTML. It also allows for separation between HTML and dynamic content (Banas, 2016). Jade is now depreciated and has been renamed Pug, although for this project Jade was used.
                      p The pros of using Jade are;
                      ul
                        li Much more readable as there is less clutter e.g. brackets are not used
                        li As correct indentation is necessary it forces the author to make Jade clean and easy to read and alter
                        li Syntax is shorter and simpler which can speed up the writing of Jade over HTML  
                      p The cons are;
                      ul
                        li
                          | Often it can be difficult to see where Jade has not been indented correctly, which can take up time and be frustrating
                        li •	Jade can sometimes be difficult to read
          .column2
            .card
              .container
                h2 jQuery
                p
                  button#btn5 More Information
                  #myModal5.modal
                    // content of model
                    .modal-content
                      span.close ×
                       h1 jQuery
                      p
                        | jQuery is a client-side JavaScript library that is used as a simplified alternative to traditional JS. It makes the traversal, manipulation, event handling, animation, and Ajax of a HTML document easier (jQuery.org, 2018).  It works in most modern browsers.
                      p The pros of using jQuery are;
                      ul
                        li Simple syntax
                        li More can be achieved in less lines of code compared to JS
                        li Large library in comparison to other JS libraries
                      p The cons are;
                      ul
                        li
                          | Some bandwidth is used to download functions from the library which wouldn’t be required with traditional JS
          .column3
            .card
              .container
                h2 JSON
                p
                  button#btn6 More Information
                  #myModal6.modal
                    // content of model
                    .modal-content
                      span.close ×
                      h1 JSON
                      p
                        | JSON stands for JavaScript Object Notation and is an open-standard file format used for is a lightweight data-interchange (json.org, 2018). It is relatively easy to read and write and the tags are self-describing. JSON is effective at persisting and exchanging data.
                      p The pros of using JSON are;
                      ul
                        li Supported by all browsers
                        li Works well with JS
                        li Easy to read
                      p The cons are;
                      ul
                        li
                          | Not as widespread as XML
        button.slider-button See more
          script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js')
         script.
         $(document).ready(function(){
         $(".slider-button").click(function(){
         $(".row2").slideToggle(500);
        
         //Button changes between "See More" and "See Less" when the slide toggle button is clicked
         //https://stackoverflow.com/questions/19365386/jquery-change-button-text-on-click
       
          var $this = $(this);
          $this.toggleClass('.row2');
          if($this.hasClass('.row2')){
          $this.text('See Less');
          } 
          else {
          $this.text('See More');
          }
          });
          });
        script.
        
          //https://www.w3schools.com/howto/howto_css_modals.asp
          // Get the modal
          
          var modal = document.getElementById('myModal');
          var modal2 = document.getElementById('myModal2');
          var modal3 = document.getElementById('myModal3');
          var modal4 = document.getElementById('myModal4');
          var modal5 = document.getElementById('myModal5');
          var modal6 = document.getElementById('myModal6');
          
          // Get the button that opens the modal
          
          var btn = document.getElementById("btn1");
          var btn2 = document.getElementById("btn2");
          var btn3 = document.getElementById("btn3");
          var btn4 = document.getElementById("btn4");
          var btn5 = document.getElementById("btn5");
          var btn6 = document.getElementById("btn6");
          
          // Get the <span> element that closes the modal
          
          var span = document.getElementsByClassName("close")[0];
          var span2 = document.getElementsByClassName("close")[1];
          var span3 = document.getElementsByClassName("close")[2];
          var span4 = document.getElementsByClassName("close")[3];
          var span5 = document.getElementsByClassName("close")[4];
          var span6 = document.getElementsByClassName("close")[5];
          
          // When the user clicks on the button, open the modal
          
          btn1.onclick = function() {
          modal.style.display = "block";
          }
          btn2.onclick = function() {
          modal2.style.display = "block";
          }
          btn3.onclick = function() {
          modal3.style.display = "block";
          }
          btn4.onclick = function() {
          modal4.style.display = "block";
          }
          btn5.onclick = function() {
          modal5.style.display = "block";
          }
          btn6.onclick = function() {
          modal6.style.display = "block";
          }
          
          // When the user clicks on <span> (x), close the modal
          
          span.onclick = function() {
          modal.style.display = "none";
          }
          span2.onclick = function() {
          modal2.style.display = "none";
          }
          span3.onclick = function() {
          modal3.style.display = "none";
          }
          span4.onclick = function() {
          modal4.style.display = "none";
          }
          span5.onclick = function() {
          modal5.style.display = "none";
          }
          span6.onclick = function() {
          modal6.style.display = "none";
          }
          
          // When the user clicks anywhere outside of the modal, close it
          
          window.onclick = function(event) {
          if (event.target == modal) {
          modal.style.display = "none";
          }
          }
          
          //Following makes a slide show on academic page
          //Based on https://www.w3schools.com/w3css/w3css_slideshow.asp
          
        script.
          var x = 0;
          autoSlideShow();
          function autoSlideShow() {
          var i;
          var y = document.getElementsByClassName("bannerslides");
          for (i = 0; i < y.length; i++) {
             y[i].style.display = "none";  
          }
          x++;
          if (x > y.length) {x = 1}    
          y[x-1].style.display = "block";  
          setTimeout(autoSlideShow, 2000); // Change image every 2 seconds
          }
            
